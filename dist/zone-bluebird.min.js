/**
* @license
* Copyright Google Inc. All Rights Reserved.
*
* Use of this source code is governed by an MIT-style license that can be
* found in the LICENSE file at https://angular.io/license
*/
!function(n){"function"==typeof define&&define.amd?define(n):n()}(function(){"use strict";
/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */Zone.__load_patch("bluebird",function(n,t,o){t[t.__symbol__("bluebird")]=function e(r){["then","spread","finally"].forEach(function(n){o.patchMethod(r.prototype,n,function(n){return function(o,e){for(var c=t.current,i=function(n){var t=e[n];"function"==typeof t&&(e[n]=function(){var n=this,o=arguments;return new r(function(e,r){c.scheduleMicroTask("Promise.then",function(){try{e(t.apply(n,o))}catch(n){r(n)}})})})},u=0;u<e.length;u++)i(u);return n.apply(o,e)}})}),r.onPossiblyUnhandledRejection(function(n,e){try{t.current.runGuarded(function(){throw n})}catch(n){o.onUnhandledError(n)}}),n[o.symbol("ZoneAwarePromise")]=r}})});